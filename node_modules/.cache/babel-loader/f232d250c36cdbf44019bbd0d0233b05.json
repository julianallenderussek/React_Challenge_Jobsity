{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/NewEventModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewEventModal = props => {\n  _s();\n\n  console.log(props);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"newEventModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: error ? 'error' : '',\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        id: \"eventTitleInput\",\n        placeholder: \"Event Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (title) {\n            setError(false);\n            onSave(title);\n          } else {\n            setError(true);\n          }\n        },\n        id: \"saveButton\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        id: \"cancelButton\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modalBackDrop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewEventModal, \"9j2mlgnVyApk4L8v17fOnVArBvE=\");\n\n_c = NewEventModal;\nexport default NewEventModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEventModal\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/NewEventModal.js"],"names":["React","useState","NewEventModal","props","console","log","title","setTitle","error","setError","e","target","value","onSave","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEE,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,SAAS,EAAEO,KAAK,GAAG,OAAH,GAAa,EAD/B;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,QAAQ,EAAEI,CAAC,IAAIH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB;AAIE,QAAA,EAAE,EAAC,iBAJL;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIN,KAAJ,EAAW;AACTG,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACAI,YAAAA,MAAM,CAACP,KAAD,CAAN;AACD,WAHD,MAGO;AACLG,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,SARH;AASE,QAAA,EAAE,EAAC,YATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAuBE;AACE,QAAA,OAAO,EAAEK,OADX;AAEE,QAAA,EAAE,EAAC,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA,kBADF;AAiCD,CAxCH;;GAAMZ,a;;KAAAA,a;AA0CN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst NewEventModal = (props) => {\n    \n  console.log(props)\n\n    const [title, setTitle] = useState('');\n    const [error, setError] = useState(false);\n  \n    return(\n      <>\n        <div id=\"newEventModal\">\n          <h2>New Event</h2>\n  \n          <input \n            className={error ? 'error' : ''}\n            value={title} \n            onChange={e => setTitle(e.target.value)} \n            id=\"eventTitleInput\" \n            placeholder=\"Event Title\" \n          />\n  \n          <button \n            onClick={() => {\n              if (title) {\n                setError(false);\n                onSave(title);\n              } else {\n                setError(true);\n              }\n            }} \n            id=\"saveButton\">Save</button>\n  \n  \n          <button \n            onClick={onClose}\n            id=\"cancelButton\">Cancel</button>\n        </div>\n  \n        <div id=\"modalBackDrop\"></div>\n      </>\n    );\n  };\n\nexport default NewEventModal\n"]},"metadata":{},"sourceType":"module"}