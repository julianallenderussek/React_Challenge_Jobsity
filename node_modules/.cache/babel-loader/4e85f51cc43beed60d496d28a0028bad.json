{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/ReactChallenge/src/components/Counter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Counter({\n  limit\n}) {\n  _s();\n\n  const [count, setCount] = React.useState(0);\n  const isLimitReached = limit ? count === limit : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Counter: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        if (isLimitReached) return;\n        setCount(count + 1);\n      },\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setCount(count - 1);\n      },\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isLimitReached && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"You reached the limit!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Counter;\nCounter.propTypes = {\n  limit: PropTypes.number\n};\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/julianallende/ReactChallenge/src/components/Counter.jsx"],"names":["React","PropTypes","Button","Counter","limit","count","setCount","useState","isLimitReached","propTypes","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,CAAf,CAA1B;AACA,QAAMC,cAAc,GAAGJ,KAAK,GAAGC,KAAK,KAAKD,KAAb,GAAqB,KAAjD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,8BAAcC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIG,cAAJ,EAAoB;AACpBF,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAiBGG,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzBQL,O;;KAAAA,O;AA2BTA,OAAO,CAACM,SAAR,GAAoB;AAClBL,EAAAA,KAAK,EAAEH,SAAS,CAACS;AADC,CAApB;AAIA,eAAeP,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nfunction Counter({ limit }) {\n  const [count, setCount] = React.useState(0);\n  const isLimitReached = limit ? count === limit : false;\n\n  return (\n    <div className=\"counter\">\n      <h3>Counter: {count}</h3>\n      <Button\n        onClick={() => {\n          if (isLimitReached) return;\n          setCount(count + 1);\n        }}\n      >\n        Increment\n      </Button>\n      <Button\n        onClick={() => {\n          setCount(count - 1);\n        }}\n      >\n        Decrement\n      </Button>\n      {isLimitReached && <span>You reached the limit!</span>}\n    </div>\n  );\n}\n\nCounter.propTypes = {\n  limit: PropTypes.number\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}