{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/DeleteEventModel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteEventModal = props => {\n  _s();\n\n  console.log(props);\n  const {\n    onDelete,\n    eventText,\n    eventReminder,\n    eventLocation,\n    eventTime,\n    onClose\n  } = props;\n  const [editModeOn, setEditModeOn] = useState(false);\n  console.log(editModeOn);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"deleteEventModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), editModeOn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"eventText\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: eventText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: eventReminder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: eventLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: eventTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"eventText\",\n          children: [\"Title: \", eventText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"eventText\",\n          children: [\"Description: \", eventReminder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"eventText\",\n          children: [\"Description: \", eventLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"eventText\",\n          children: [\"Description: \", eventTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), editModeOn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditModeOn(!editModeOn),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditModeOn(!editModeOn),\n        id: \"editButton\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDelete,\n        id: \"deleteButton\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        id: \"closeButton\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modalBackDrop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteEventModal, \"xzmZeP4LzuFdtN75TouVYecq2vs=\");\n\n_c = DeleteEventModal;\nexport default DeleteEventModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteEventModal\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/DeleteEventModel.js"],"names":["React","useState","DeleteEventModal","props","console","log","onDelete","eventText","eventReminder","eventLocation","eventTime","onClose","editModeOn","setEditModeOn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEhCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA,aAAtC;AAAqDC,IAAAA,SAArD;AAAgEC,IAAAA;AAAhE,MAA4ER,KAAlF;AAEA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ;AAEA,sBACA;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQA,UAAU,gBAEV;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAG,YAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,WAAW,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAO,UAAA,WAAW,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAO,UAAA,WAAW,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAO,UAAA,WAAW,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,sBAFU,gBAYV;AAAA,gCACI;AAAG,UAAA,EAAE,EAAC,WAAN;AAAA,gCAA0BH,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,EAAE,EAAC,WAAN;AAAA,sCAAgCC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,EAAE,EAAC,WAAN;AAAA,sCAAgCC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAG,UAAA,EAAE,EAAC,WAAN;AAAA,sCAAgCC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBAfR,EAwBME,UAAU,gBAEZ;AAAQ,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAF,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFY,gBAIZ;AAAQ,QAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAF,CAApC;AAAmD,QAAA,EAAE,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAgCI;AAAQ,QAAA,OAAO,EAAEN,QAAjB;AAA2B,QAAA,EAAE,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAiCI;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAA0B,QAAA,EAAE,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqCI;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA,kBADA;AAyCH,CAlDD;;GAAMT,gB;;KAAAA,gB;AAoDN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst DeleteEventModal = (props) => {\n    \n    console.log(props);\n    const { onDelete, eventText, eventReminder, eventLocation, eventTime, onClose } = props\n\n    const [editModeOn, setEditModeOn] = useState(false)\n\n    console.log(editModeOn)\n\n    return (\n    <>\n        <div id=\"deleteEventModal\">\n            <h2>Event</h2>\n\n            {   editModeOn ?\n                \n                <>\n                    <div className=\"row-div\">\n                        <p id=\"eventText\">Title:</p>\n                        <input placeholder={eventText}></input>\n                    </div>\n                    <input placeholder={eventReminder}></input>\n                    <input placeholder={eventLocation}></input>\n                    <input placeholder={eventTime}></input>\n                </>\n                :\n                <>\n                    <p id=\"eventText\">Title: {eventText}</p>\n                    <p id=\"eventText\">Description: {eventReminder}</p>\n                    <p id=\"eventText\">Description: {eventLocation}</p>\n                    <p id=\"eventText\">Description: {eventTime}</p>\n                </>\n            }\n\n            \n            { editModeOn ? \n            \n            <button onClick={() => setEditModeOn(!editModeOn)}>Save</button> :\n            \n            <button onClick={() => setEditModeOn(!editModeOn)} id=\"editButton\">Edit</button>\n\n            }\n\n            <button onClick={onDelete} id=\"deleteButton\">Delete</button>\n            <button onClick={onClose} id=\"closeButton\">Close</button>\n        </div>\n\n        <div id=\"modalBackDrop\"></div>\n    </>\n    )\n}\n\nexport default DeleteEventModal\n"]},"metadata":{},"sourceType":"module"}