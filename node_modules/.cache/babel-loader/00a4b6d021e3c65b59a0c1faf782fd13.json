{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Day.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Day = ({\n  day,\n  onClick\n}) => {\n  _s();\n\n  const [weatherIsTrue, setWeatherIsTrue] = useState(false);\n  const [avgTemperature, setAvgTemperature] = useState(0);\n  const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''}`;\n\n  async function fetchLocation(location) {\n    const url = `https://www.metaweather.com/api/location/search/?query=${location}`;\n    const response = await fetch(url, {});\n    const data = await response.json();\n    const woeid = await data[0].woeid;\n    fetchWeatherData(woeid);\n  }\n\n  async function fetchWeatherData(woeid) {\n    const splitDate = day.date.split('/');\n    const monthString = splitDate[0];\n    const dayString = splitDate[1];\n    const yearString = splitDate[2];\n    const requestDate = yearString + '/' + monthString + '/' + dayString + '/';\n    let url = `https://www.metaweather.com/api/location/${woeid}/${requestDate}`;\n    const response = await fetch(url, {});\n    const data = await response.json();\n    const avgTempCalc = (data[0].max_temp + data[0].min_temp) / 2;\n    setAvgTemperature(avgTempCalc);\n    setWeatherIsTrue(true);\n  }\n\n  if (day.event) {\n    console.log('Logging This');\n    const locationInput = day.event.location.toLowerCase();\n    fetchLocation(locationInput);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: className,\n    children: [day.value === 'padding' ? '' : day.value, weatherIsTrue ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: avgTemperature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), day.event && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: day.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Day, \"RVIzt85/B66jmSABtvSJzoFiKIY=\");\n\n_c = Day;\nexport default Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Day.js"],"names":["React","useState","Day","day","onClick","weatherIsTrue","setWeatherIsTrue","avgTemperature","setAvgTemperature","className","value","isCurrentDay","fetchLocation","location","url","response","fetch","data","json","woeid","fetchWeatherData","splitDate","date","split","monthString","dayString","yearString","requestDate","avgTempCalc","max_temp","min_temp","event","console","log","locationInput","toLowerCase","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;;AAEA,MAAMC,GAAG,GAAG,CAAE;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAF,KAAqB;AAAA;;AAE7B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAAD,CAApD;AAEA,QAAMQ,SAAS,GAAI,OAAMN,GAAG,CAACO,KAAJ,KAAc,SAAd,GAA0B,SAA1B,GAAsC,EAAG,IAAGP,GAAG,CAACQ,YAAJ,GAAmB,YAAnB,GAAkC,EAAG,EAA1G;;AAEA,iBAAeC,aAAf,CAA8BC,QAA9B,EAAwC;AAChC,UAAMC,GAAG,GAAI,0DAAyDD,QAAS,EAA/E;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM,EAAN,CAA5B;AAEA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,KAAK,GAAG,MAAMF,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAA5B;AACAC,IAAAA,gBAAgB,CAACD,KAAD,CAAhB;AACP;;AAED,iBAAeC,gBAAf,CAAiCD,KAAjC,EAAwC;AACpC,UAAME,SAAS,GAAGlB,GAAG,CAACmB,IAAJ,CAASC,KAAT,CAAe,GAAf,CAAlB;AAEA,UAAMC,WAAW,GAAGH,SAAS,CAAC,CAAD,CAA7B;AACA,UAAMI,SAAS,GAAGJ,SAAS,CAAC,CAAD,CAA3B;AACA,UAAMK,UAAU,GAAGL,SAAS,CAAC,CAAD,CAA5B;AAEA,UAAMM,WAAW,GAAGD,UAAU,GAAG,GAAb,GAAmBF,WAAnB,GAAiC,GAAjC,GAAuCC,SAAvC,GAAmD,GAAvE;AAEA,QAAIX,GAAG,GAAI,4CAA2CK,KAAM,IAAGQ,WAAY,EAA3E;AACA,UAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM,EAAN,CAA5B;AAEA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMU,WAAW,GAAG,CAACX,IAAI,CAAC,CAAD,CAAJ,CAAQY,QAAR,GAAmBZ,IAAI,CAAC,CAAD,CAAJ,CAAQa,QAA5B,IAAwC,CAA5D;AACAtB,IAAAA,iBAAiB,CAACoB,WAAD,CAAjB;AACAtB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AAED,MAAIH,GAAG,CAAC4B,KAAR,EAAe;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMC,aAAa,GAAG/B,GAAG,CAAC4B,KAAJ,CAAUlB,QAAV,CAAmBsB,WAAnB,EAAtB;AACAvB,IAAAA,aAAa,CAACsB,aAAD,CAAb;AACH;;AAGD,sBACI;AAAK,IAAA,OAAO,EAAE9B,OAAd;AAAuB,IAAA,SAAS,EAAEK,SAAlC;AAAA,eAEKN,GAAG,CAACO,KAAJ,KAAc,SAAd,GAA0B,EAA1B,GAA+BP,GAAG,CAACO,KAFxC,EAIML,aAAa,gBAAG;AAAA,gBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiC,qCAJpD,EAMKJ,GAAG,CAAC4B,KAAJ,iBAAa;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwB5B,GAAG,CAAC4B,KAAJ,CAAUK;AAAlC;AAAA;AAAA;AAAA;AAAA,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CApDD;;GAAMlC,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import React, { useState} from 'react'\n\nconst Day = ( {day, onClick}) => {\n\n    const [weatherIsTrue, setWeatherIsTrue] = useState(false)\n    const [avgTemperature, setAvgTemperature] = useState(0)\n\n    const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''}`;\n\n    async function fetchLocation (location) {\n            const url = `https://www.metaweather.com/api/location/search/?query=${location}`;\n            const response = await fetch(url, {\n            })\n            const data = await response.json()\n            const woeid = await data[0].woeid\n            fetchWeatherData(woeid)\n    }\n\n    async function fetchWeatherData (woeid) {\n        const splitDate = day.date.split('/')\n        \n        const monthString = splitDate[0];\n        const dayString = splitDate[1];\n        const yearString = splitDate[2]; \n\n        const requestDate = yearString + '/' + monthString + '/' + dayString + '/'\n\n        let url = `https://www.metaweather.com/api/location/${woeid}/${requestDate}`;\n        const response = await fetch(url, {\n        })\n        const data = await response.json()\n        const avgTempCalc = (data[0].max_temp + data[0].min_temp) / 2\n        setAvgTemperature(avgTempCalc)\n        setWeatherIsTrue(true)\n    }\n\n    if (day.event) {\n        console.log('Logging This')\n        const locationInput = day.event.location.toLowerCase()\n        fetchLocation(locationInput)\n    }\n    \n\n    return (\n        <div onClick={onClick} className={className}>\n            \n            {day.value === 'padding' ? '' : day.value}\n\n            { weatherIsTrue ? <div>{avgTemperature}</div> : <></>}\n\n            {day.event && <div className='event'>{day.event.title}</div>}\n        \n        </div>\n    )\n}\n\nexport default Day\n"]},"metadata":{},"sourceType":"module"}