{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/ReactChallenge/src/pages/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../sass/calendar.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar(props) {\n  _s();\n\n  //Initalizing States used in Calendar\n  const [nav, setNav] = useState(0);\n  const [days, setDays] = useState([]);\n  const [dateDisplay, setdateDisplay] = useState('');\n  const [clicked, setClicked] = useState(); //Checking if we already have some events stored in local storage.\n\n  const [events, setEvents] = useState(localStorage.getItem('events') ? JSON.parse(localStorage.getItem('events')) : []);\n\n  const eventForDate = date => events.find(e => e.date === date); //UseEffect function that updates state of events each time event changes\n\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weekdays\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sunday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Monday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Tuesday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Wednesday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Thursday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Friday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Saturday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"KABAONn2DKnb0Jwgb5mLbGMuTqc=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/julianallende/ReactChallenge/src/pages/Calendar.js"],"names":["React","useState","useEffect","Calendar","props","nav","setNav","days","setDays","dateDisplay","setdateDisplay","clicked","setClicked","events","setEvents","localStorage","getItem","JSON","parse","eventForDate","date","find","e","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,uBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEvB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC,CANuB,CAQvB;;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAClCc,YAAY,CAACC,OAAb,CAAqB,QAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADF,GAEE,EAHgC,CAApC;;AAMA,QAAMG,YAAY,GAAGC,IAAI,IAAIP,MAAM,CAACQ,IAAP,CAAYC,CAAC,IAAIA,CAAC,CAACF,IAAF,KAAWA,IAA5B,CAA7B,CAfuB,CAiBvB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BN,IAAI,CAACO,SAAL,CAAeX,MAAf,CAA/B;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAKA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BAEE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAvCQV,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../sass/calendar.scss'\n\nfunction Calendar(props) {\n  \n  //Initalizing States used in Calendar\n  const [nav, setNav] = useState(0)\n  const [days, setDays] = useState([]);\n  const [dateDisplay, setdateDisplay] = useState('');\n  const [clicked, setClicked] = useState();\n  \n  //Checking if we already have some events stored in local storage.\n  const [events, setEvents] = useState(\n    localStorage.getItem('events') \n    ? JSON.parse(localStorage.getItem('events')) \n    : []\n  );\n\n  const eventForDate = date => events.find(e => e.date === date);\n  \n  //UseEffect function that updates state of events each time event changes\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events])\n\n\n  return (\n    <div id=\"container\">\n\n      <div id=\"weekdays\">\n        <div>Sunday</div>\n        <div>Monday</div>\n        <div>Tuesday</div>\n        <div>Wednesday</div>\n        <div>Thursday</div>\n        <div>Friday</div>\n        <div>Saturday</div>\n      </div>\n\n      <div id=\"calendar\"></div>\n    </div>\n  )\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}