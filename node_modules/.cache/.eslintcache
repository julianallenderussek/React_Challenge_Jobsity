[{"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/index.js":"1","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/Main.js":"2","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/reportWebVitals.js":"3","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/store/getStore.js":"4","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/reducers/index.js":"5","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/routes/index.js":"6","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/pages/App.js":"7","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/pages/Calendar.js":"8","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/NewEventModal.js":"9","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Day.js":"10","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/CalendarHeader.js":"11","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Readme.jsx":"12","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Counter.jsx":"13","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Button.jsx":"14","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/DeleteEventModel.js":"15"},{"size":831,"mtime":1627672252769,"results":"16","hashOfConfig":"17"},{"size":290,"mtime":1627672252769,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1627672252769,"results":"19","hashOfConfig":"17"},{"size":583,"mtime":1627672252769,"results":"20","hashOfConfig":"17"},{"size":104,"mtime":1627672252769,"results":"21","hashOfConfig":"17"},{"size":251,"mtime":1627672252769,"results":"22","hashOfConfig":"17"},{"size":137,"mtime":1627722127452,"results":"23","hashOfConfig":"17"},{"size":5264,"mtime":1628053165700,"results":"24","hashOfConfig":"17"},{"size":6749,"mtime":1628049028866,"results":"25","hashOfConfig":"17"},{"size":2023,"mtime":1628049127990,"results":"26","hashOfConfig":"17"},{"size":391,"mtime":1627763761191,"results":"27","hashOfConfig":"17"},{"size":1064,"mtime":1627672252769,"results":"28","hashOfConfig":"17"},{"size":745,"mtime":1627672252769,"results":"29","hashOfConfig":"17"},{"size":382,"mtime":1627672252769,"results":"30","hashOfConfig":"17"},{"size":5614,"mtime":1628053580584,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"w5xslz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/index.js",[],["66","67"],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/Main.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/reportWebVitals.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/store/getStore.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/reducers/index.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/routes/index.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/pages/App.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/pages/Calendar.js",["68","69","70","71"],"import React, { useState, useEffect } from 'react';\nimport '../sass/calendar.scss'\nimport Day from '../components/Day'\nimport CalendarHeader from '../components/CalendarHeader';\nimport NewEventModal from '../components/NewEventModal'\nimport DeleteEventModal from '../components/DeleteEventModel'\n\nfunction Calendar(props) {\n  \n  //Initalizing States used in Calendar\n  const [nav, setNav] = useState(0)\n  const [days, setDays] = useState([]);\n  const [dateDisplay, setDateDisplay] = useState('');\n  const [clicked, setClicked] = useState();\n  \n  //Checking if we already have some events stored in local storage.\n  const [events, setEvents] = useState(\n    localStorage.getItem('events') \n    ? JSON.parse(localStorage.getItem('events')) \n    : []\n  );\n\n  const [eventsTemp, setEventsTemp] = useState(\n    localStorage.getItem('eventsTemp') \n    ? JSON.parse(localStorage.getItem('eventsTemp')) \n    : []\n  );\n\n  const eventForDate = date => events.find(e => e.date === date);\n  \n  //UseEffect function that updates state of events each time event changes\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events])\n\n  useEffect(() => {\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const dt = new Date();\n    \n    const dayNumber = dt.getDate()\n    \n    //Function to check if the day is the 31 of a month (Bug fixed from changing from 31 January to Feb)\n    if (nav !==0 && dayNumber > 28) {\n      dt.setDate(new Date().getDate() - 5);\n    }\n\n    if (nav !==0) {\n      dt.setMonth(new Date().getMonth() + nav);\n    }\n\n    const day = dt.getDate();\n    const month = dt.getMonth();\n    const year = dt.getFullYear();\n\n    const firstDayOfMonth = new Date(year, month, 1);\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const dateString = firstDayOfMonth.toLocaleDateString('en-us', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    });\n\n    setDateDisplay(`${dt.toLocaleDateString('en-us', { month: 'long' })} ${year}`);\n\n    const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);\n\n    const daysArr = [];\n\n    for (let i = 0; i <= paddingDays + daysInMonth; i++) {\n      const dayString = `${month + 1}/${i - paddingDays}/${year}`\n    \n      if (i > paddingDays) {\n        daysArr.push({\n          value: i - paddingDays,\n          event: eventForDate(dayString),\n          isCurrentDay: i - paddingDays === day && nav === 0  ? true : false,\n          date: dayString\n        });\n      } else {\n        daysArr.push({\n          value: 'padding',\n          event: null,\n          isCurrentDay: false,\n          date: ''\n        });\n      }      \n    }   \n\n    setDays(daysArr)\n\n  }, [events, nav])\n\n  const onSave = (title, reminder, location, timeSlotOne, amPmOne, timeSlotTwo, amPmTwo) => {\n    let timeString = timeSlotOne + amPmOne + \" - \" + timeSlotTwo + amPmTwo\n    console.log(timeString, 'GUACAMOLE');\n    setEvents([ ...events, {title, date:clicked, reminder: reminder, location: location, time: timeString, \n      timeVariables: {timeSlotOne:timeSlotOne, amPmOne: amPmOne, timeSlotTwo: timeSlotTwo, amPmTwo:amPmOne}}])\n    setClicked(null);\n  }\n\n  const onSave2 = (title, reminder, location, timeSlotOne, amPmOne, timeSlotTwo, amPmTwo, onDelete ) => {\n    let timeString = timeSlotOne + amPmOne + \" - \" + timeSlotTwo + amPmTwo\n    const newEvent = {title, date:clicked, reminder: reminder, location: location, time: timeString, \n      timeVariables: {timeSlotOne:timeSlotOne, amPmOne: amPmOne, timeSlotTwo: timeSlotTwo, amPmTwo:amPmOne}}\n    onDelete()\n    setEvents([ ...events, newEvent ])\n    setClicked(null);\n  }\n\n  return (\n    <>\n      <div id=\"container\">\n      \n      <CalendarHeader\n        dateDisplay={dateDisplay}\n        onNext={() => setNav(nav + 1)}\n        onBack={() => setNav(nav - 1)}\n      />\n      \n      <div id=\"weekdays\">\n        <div>Sunday</div>\n        <div>Monday</div>\n        <div>Tuesday</div>\n        <div>Wednesday</div>\n        <div>Thursday</div>\n        <div>Friday</div>\n        <div>Saturday</div>\n      </div>\n\n      <div id=\"calendar\">\n        {days.map((d, index) => (\n        <Day\n          key={index}\n          day={d}\n          onClick={ () => {\n            if (d.value !== 'padding') {\n              setClicked(d.date)\n            }\n          }}    \n          />\n          ))}\n      </div>\n    </div>\n\n        { \n          clicked && !eventForDate(clicked) &&\n          <NewEventModal\n          onClose={() => setClicked(null)}\n          onSave={onSave}\n          />\n        }\n\n        {\n        clicked && eventForDate(clicked) &&\n        <DeleteEventModal\n          clicked={clicked}\n          events = {events}\n          eventText={eventForDate(clicked).title}\n          eventReminder={eventForDate(clicked).reminder}\n          eventLocation={eventForDate(clicked).location}\n          eventTime={eventForDate(clicked).time}\n          onClose={() => setClicked(null)}\n          onDelete={() => {\n            setEvents(events.filter(e => e.date !== clicked));\n            setClicked(null);  \n          }}\n          onSave2={onSave2}\n          eventForDate={eventForDate}\n        />\n        }\n\n    </>\n  );\n}\n\nexport default Calendar;","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/NewEventModal.js",["72","73","74","75","76","77","78","79","80","81","82","83"],"import React, {isValidElement, useState, useEffect} from 'react'\n\nconst NewEventModal = (props) => {\n  \n  const {onSave, onClose} = props\n  \n  console.log(props)\n\n    const [title, setTitle] = useState('');\n    const [reminder, setReminder] = useState('');\n    const [location, setLocation] = useState('')\n\n    const [charDifference, setCharDifference] = useState(0)\n\n    const [titleError, setTitleError] = useState(false);\n    const [titleErrorMsg, setTitleErrorMsg] = useState('')\n    \n    const [reminderError, setReminderError] = useState(false);\n    const [reminderErrorMsg, setReminderErrorMsg] = useState('')\n    \n    const [locationError, setLocationError] = useState(false);\n    const [locationErrorMsg, setLocationErrorMsg] = useState('')\n\n    const [timeSlotOne, setTimeSlotOne] = useState('');\n    const [amPmOne, setAmPmOne] = useState('');\n    const [timeSlotTwo, setTimeSlotTwo] = useState('');\n    const [amPmTwo, setAmPmTwo] = useState('')\n\n    const [timeSlotErrorMsg, setTimeSlotErrorMsg] = useState('')\n\n    const handleValidation = () => {\n      let valid = true;\n\n      if (title.length <= 0) {\n        valid = false\n        setTitleError(true)\n        console.log('TO SHORT');\n        setTitleErrorMsg('Please add a title')\n      }\n      \n      if (reminder.length <= 0) {\n        console.log('TO SHORT REMINDER');\n        setReminderError(true)\n        setReminderErrorMsg('Please add a reminder')\n        valid = false\n      }\n\n      if (reminder.length > 30) {\n        setReminderError(true)\n        setReminderErrorMsg(('Description needs to be shorter than 30 characters'))\n        valid = false\n      }\n\n      if (location.length <= 0) {\n        setLocationError(true)\n        setLocationErrorMsg('Please add a valid city or location')\n        valid = false\n      }\n\n      if (timeSlotOne.length  <= 0 || timeSlotTwo.length  <= 0 || amPmOne.length <= 0 || amPmTwo.length <= 0  ) {\n        setTimeSlotErrorMsg('Please Enter all Time Slot Fields')\n        valid = false\n      }\n      \n      console.log('finishing guacamole')\n\n      console.log(valid, 'WAKA WAKA')\n      return valid\n    }\n\n    useEffect(() => {\n      console.log(title,reminder,location, timeSlotOne, amPmOne, timeSlotTwo, amPmTwo)\n    }, [title,reminder,location, timeSlotOne, amPmOne, timeSlotTwo, amPmTwo])\n    \n    const calculateDifference = (str) => {\n      console.log(str)\n      const differenceChar = 30 - str.length\n      setCharDifference(differenceChar)\n    }\n\n    return(\n      <>\n        <div id=\"newEventModal\">\n          <h2>New Event</h2>\n          <input \n            // className={titleError ? 'error' : ''}\n            value={title} \n            onChange={e => setTitle(e.target.value)} \n            id=\"eventTitleInput\" \n            placeholder=\"Event Title\" \n          />\n          <div className=\"error-message-input\">{titleErrorMsg}</div>\n\n          <h2>Reminder</h2>\n            \n            <input \n              // className={reminderError ? 'error' : ''}\n              value={reminder} \n              onChange={e =>{\n                calculateDifference(e.target.value) \n                setReminder(e.target.value)\n              }} \n              id=\"eventTitleInput\" \n              placeholder=\"Description Max. 30 chars\" \n            />\n            <h2 className=\"charachters-left\">{charDifference}</h2>\n            <div className=\"error-message-input\">{reminderErrorMsg}</div>\n          \n          <h2>Location/City</h2>\n            <input \n              // className={locationError ? 'error' : ''}\n              value={location} \n              onChange={e => setLocation(e.target.value)} \n              id=\"eventTitleInput\" \n              placeholder=\"Example: London\" \n            />\n          <div className=\"error-message-input\">{locationErrorMsg}</div>\n          \n          <h2>Time</h2>\n          <div className=\"row-time-selector\">\n              <select className=\"time-selector\" name=\"time-slot\" onChange={(event) => setTimeSlotOne(event.target.value)}>\n                <option value=\"\">-</option>\n                <option value=\"0:00\">0:00</option>\n                <option value=\"1:00\">1:00</option>\n                <option value=\"2:00\">2:00</option>\n                <option value=\"3:00\">3:00</option>\n                <option value=\"4:00\">4:00</option>\n                <option value=\"5:00\">5:00</option>\n                <option value=\"6:00\">6:00</option>\n                <option value=\"7:00\">7:00</option>\n                <option value=\"8:00\">8:00</option>\n                <option value=\"9:00\">9:00</option>\n                <option value=\"10:00\">10:00</option>\n                <option value=\"11:00\">11:00</option>\n              </select>\n              <select className=\"time-selector\" name=\"time-slot\" onChange={(event) => setAmPmOne(event.target.value)}>\n                <option value=\"\">-</option>\n                <option value=\"AM\">AM</option>\n                <option value=\"PM\">PM</option>\n              </select>\n              <select className=\"time-selector\" name=\"time-slot\" onChange={(event) => setTimeSlotTwo(event.target.value)}>\n              <option value=\"\">-</option>\n                <option value=\"0:00\">0:00</option>\n                <option value=\"1:00\">1:00</option>\n                <option value=\"2:00\">2:00</option>\n                <option value=\"3:00\">3:00</option>\n                <option value=\"4:00\">4:00</option>\n                <option value=\"5:00\">5:00</option>\n                <option value=\"6:00\">6:00</option>\n                <option value=\"7:00\">7:00</option>\n                <option value=\"8:00\">8:00</option>\n                <option value=\"9:00\">9:00</option>\n                <option value=\"10:00\">10:00</option>\n                <option value=\"11:00\">11:00</option>\n              </select>\n              <select className=\"time-selector\" name=\"time-slot\" onChange={(event) => setAmPmTwo(event.target.value)}>\n                <option value=\"\">-</option>\n                <option value=\"AM\">AM</option>\n                <option value=\"PM\">PM</option>\n              </select>\n              <div className=\"error-message-input\">{timeSlotErrorMsg}</div>\n          </div>\n\n\n          <button \n            onClick={ async () => {\n              let isFormValid = await handleValidation()\n              console.log(isFormValid, 'Loging this')\n              // isFormValid = true\n              if (isFormValid) {\n                onSave(title,reminder,location, timeSlotOne, amPmOne, timeSlotTwo, amPmTwo);\n              } \n            }} \n\n\n            id=\"saveButton\">Save</button>\n  \n  \n          <button \n            onClick={onClose}\n            id=\"cancelButton\">Cancel</button>\n        </div>\n  \n        <div id=\"modalBackDrop\"></div>\n      </>\n    );\n  };\n\nexport default NewEventModal\n","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Day.js",["84","85"],"import React, { useState} from 'react'\n\nconst Day = ( {day, onClick}) => {\n\n    const [weatherIsTrue, setWeatherIsTrue] = useState(false)\n    const [avgTemperature, setAvgTemperature] = useState(0)\n\n    const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''}`;\n\n    async function fetchLocation (location) {\n            const url = `https://www.metaweather.com/api/location/search/?query=${location}`;\n            const response = await fetch(url, {\n            })\n            const data = await response.json()\n            try {\n                const woeid = await data[0].woeid\n                fetchWeatherData(woeid)\n            }\n            catch {\n                console.log('LOCATION ENTERED DOES NOT HAVE WEATHER DATA')\n            }\n    }\n\n    async function fetchWeatherData (woeid) {\n        const splitDate = day.date.split('/')\n        \n        const monthString = splitDate[0];\n        const dayString = splitDate[1];\n        const yearString = splitDate[2]; \n\n        const requestDate = yearString + '/' + monthString + '/' + dayString + '/'\n\n        let url = `https://www.metaweather.com/api/location/${woeid}/${requestDate}`;\n        const response = await fetch(url, {\n        })\n        const data = await response.json()\n        const avgTempCalc = (data[0].max_temp + data[0].min_temp) / 2\n        setAvgTemperature(avgTempCalc)\n        setWeatherIsTrue(true)\n    }\n\n    if (day.event) {\n        console.log('Logging This')\n        const locationInput = day.event.location.toLowerCase()\n        fetchLocation(locationInput)\n    }\n    \n\n    return (\n        <div onClick={onClick} className={className}>\n            <div className=\"row-div-day\">\n                {day.value === 'padding' ? '' : day.value}\n                { weatherIsTrue ? <div className=\"temperature\">{avgTemperature} °</div> : <></>}\n            </div>\n\n            {day.event && <div className='event'>{day.event.title}</div>}\n        \n        </div>\n    )\n}\n\nexport default Day\n","/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/CalendarHeader.js",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Readme.jsx",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Counter.jsx",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/Button.jsx",[],"/home/julianallende/Desktop/Coding/challenges/ReactChallenge/src/components/DeleteEventModel.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":23,"column":10,"nodeType":"105","messageId":"106","endLine":23,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":23,"column":22,"nodeType":"105","messageId":"106","endLine":23,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":92,"column":6,"nodeType":"110","endLine":92,"endColumn":19,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":96,"column":5,"nodeType":"114","messageId":"115","endLine":96,"endColumn":16},{"ruleId":"103","severity":1,"message":"116","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":14},{"ruleId":"103","severity":1,"message":"117","line":15,"column":12,"nodeType":"105","messageId":"106","endLine":15,"endColumn":22},{"ruleId":"103","severity":1,"message":"118","line":18,"column":12,"nodeType":"105","messageId":"106","endLine":18,"endColumn":25},{"ruleId":"103","severity":1,"message":"119","line":21,"column":12,"nodeType":"105","messageId":"106","endLine":21,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":37,"column":9,"nodeType":"114","messageId":"115","endLine":37,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":42,"column":9,"nodeType":"114","messageId":"115","endLine":42,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":65,"column":7,"nodeType":"114","messageId":"115","endLine":65,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":67,"column":7,"nodeType":"114","messageId":"115","endLine":67,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":72,"column":7,"nodeType":"114","messageId":"115","endLine":72,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":76,"column":7,"nodeType":"114","messageId":"115","endLine":76,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":168,"column":15,"nodeType":"114","messageId":"115","endLine":168,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":20,"column":17,"nodeType":"114","messageId":"115","endLine":20,"endColumn":28},{"ruleId":"112","severity":1,"message":"113","line":43,"column":9,"nodeType":"114","messageId":"115","endLine":43,"endColumn":20},{"ruleId":"103","severity":1,"message":"120","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":5,"column":5,"nodeType":"114","messageId":"115","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"121","line":16,"column":9,"nodeType":"105","messageId":"106","endLine":16,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":20,"column":5,"nodeType":"114","messageId":"115","endLine":20,"endColumn":16},{"ruleId":"103","severity":1,"message":"122","line":25,"column":12,"nodeType":"105","messageId":"106","endLine":25,"endColumn":19},{"ruleId":"103","severity":1,"message":"123","line":26,"column":12,"nodeType":"105","messageId":"106","endLine":26,"endColumn":28},{"ruleId":"103","severity":1,"message":"124","line":27,"column":12,"nodeType":"105","messageId":"106","endLine":27,"endColumn":28},{"ruleId":"103","severity":1,"message":"125","line":29,"column":12,"nodeType":"105","messageId":"106","endLine":29,"endColumn":24},{"ruleId":"103","severity":1,"message":"126","line":29,"column":26,"nodeType":"105","messageId":"106","endLine":29,"endColumn":41},{"ruleId":"103","severity":1,"message":"127","line":31,"column":12,"nodeType":"105","messageId":"106","endLine":31,"endColumn":27},{"ruleId":"103","severity":1,"message":"128","line":32,"column":12,"nodeType":"105","messageId":"106","endLine":32,"endColumn":27},{"ruleId":"103","severity":1,"message":"129","line":33,"column":12,"nodeType":"105","messageId":"106","endLine":33,"endColumn":22},{"ruleId":"103","severity":1,"message":"130","line":34,"column":12,"nodeType":"105","messageId":"106","endLine":34,"endColumn":22},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'eventsTemp' is assigned a value but never used.","Identifier","unusedVar","'setEventsTemp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventForDate'. Either include it or remove the dependency array.","ArrayExpression",["133"],"no-console","Unexpected console statement.","MemberExpression","unexpected","'isValidElement' is defined but never used.","'titleError' is assigned a value but never used.","'reminderError' is assigned a value but never used.","'locationError' is assigned a value but never used.","'useEffect' is defined but never used.","'onSave2' is assigned a value but never used.","'newText' is assigned a value but never used.","'newEventReminder' is assigned a value but never used.","'newEventLocation' is assigned a value but never used.","'newEventTime' is assigned a value but never used.","'setNewEventTime' is assigned a value but never used.","'newTimeSloteOne' is assigned a value but never used.","'newTimeSloteTwo' is assigned a value but never used.","'newAmPmOne' is assigned a value but never used.","'newAmPmTwo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [eventForDate, events, nav]",{"range":"136","text":"137"},[2756,2769],"[eventForDate, events, nav]"]